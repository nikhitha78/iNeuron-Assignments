CREATE DATABASE NIKI_TASKS;
USE NIKI_TASKS;

--TASK 1:

CREATE TABLE SHOPPING_HISTORY(
PRODUCT VARCHAR NOT NULL,
QUANTITY INTEGER NOT NULL,
UNIT_PRICE INTEGER NOT NULL
);

INSERT INTO SHOPPING_HISTORY VALUES ('MILK',3,10),('BREAD',7,3),('BREAD',5,2);


INSERT INTO SHOPPING_HISTORY VALUES ('CHOCOLATE',5,16),('TEA',4,19),('TEA',5,2),('CHIPS',6,5);

SELECT * FROM SHOPPING_HISTORY;

SELECT DISTINCT PRODUCT, SUM(QUANTITY*UNIT_PRICE) AS TOTAL_PRICE FROM SHOPPING_HISTORY
GROUP BY PRODUCT
ORDER BY PRODUCT DESC;

========================================================

--TASK 2

CREATE TABLE PHONES(
NAME VARCHAR(20) NOT NULL UNIQUE,
PHONE_NUMBER INTEGER NOT NULL UNIQUE
);

CREATE TABLE CALLS(
ID INTEGER NOT NULL,
CALLER INTEGER NOT NULL,
CALLEE INTEGER NOT NULL,
DURATION INTEGER NOT NULL,
UNIQUE(ID)
);


INSERT INTO PHONES VALUES
('JACK',1234),
('LENA',3333),
('MARK',9999),
('ANNA',7582);

INSERT INTO CALLS VALUES
(25,1234,7582,8),
(7,9999,7582,1),
(18,9999,3333,4),
(2,7582,3333,3),
(3,3333,1234,1),
(21,3333,1234,1);

SELECT P.NAME FROM PHONES P 
LEFT OUTER JOIN 
(SELECT NAME,SUM(DUR) AS DUR FROM 
    (SELECT CALLER AS NAME ,SUM(DURATION) AS DUR FROM CALLS GROUP BY CALLER
    UNION
    SELECT CALLEE AS NAME,SUM(DURATION) AS DUR FROM CALLS GROUP BY CALLEE) AS NEW_TABLE GROUP BY NAME) N 
ON P.PHONE_NUMBER=N.NAME WHERE N.DUR>=10 ORDER BY P.NAME;


INSERT INTO PHONES VALUES
('JOHN',6356),
('ADDISON',4315),
('KATE',8003),
('GINNY',9831);

INSERT INTO CALLS VALUES
(65,8003,9831,7),
(100,9831,8003,3),
(145,4315,9831,18);


=================================

---TASK 3

CREATE TABLE TRANSACTIONS(
AMOUNT INTEGER NOT NULL,
DATE DATE NOT NULL);

INSERT INTO TRANSACTIONS VALUES
(1000,'2020-01-06'),
(-10,'2020-01-14'),
(-75,'2020-01-20'),
(-5,'2020-01-25'),
(-4,'2020-01-29'),
(2000,'2020-03-10'),
(-75,'2020-03-12'),
(-20,'2020-03-15'),
(40,'2020-03-15'),
(-50,'2020-03-17'),
(200,'2020-10-10'),
(-200,'2020-10-10');

select * from transactions;

select(sum(a.total) - ( (12 - count(b.cnt)) * 5) ) as balance from
(select sum(amount) as total, 'A' as name from TRANSACTIONS) as a
left join
(select count(amount) as cnt, 'A' as name  
 from TRANSACTIONS where amount<0 
 group by month(date)
 having  ( ((count(amount))>=3 ) and ((sum(amount)) <= -100 ))) as b
 on a.name=b.name;
 
 
 INSERT INTO TRANSACTIONS VALUES
(1,'2020-06-29'),
(35,'2020-02-20'),
(-50,'2020-02-03'),
(-1,'2020-02-26'),
(-200,'2020-08-01'),
(-44,'2020-02-07'),
(-5,'2020-02-25'),
(1,'2020-06-29'),
(1,'2020-06-29'),
(-100,'2020-12-29'),
(-100,'2020-12-30'),
(-100,'2020-12-31');


 INSERT INTO TRANSACTIONS VALUES
(6000,'2020-04-03'),
(5000,'2020-04-02'),
(4000,'2020-04-01'),
(3000,'2020-03-01'),
(2000,'2020-02-01'),
(1000,'2020-01-01');

